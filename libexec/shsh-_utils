#!/usr/bin/env sh
#
# Summary: Utilities that are used throughout the project

resolve_link() {
  $(which greadlink readlink 2>/dev/null | head -1) "$1"
}

echo_if_verbose() {
  [ -n "$SHSH_VERBOSE" ] && echo "$1" || :
}

remove_linked() {
  # Given a folder as first arg, if anything that follows it
  # is a link resides within the folder, delete it
  package="$1"
  shift
  for link in "$@"; do
    # do nothing if the arugnment is not an actual file
    [ -e "$link" ] || [ -L "$link" ] || continue
    case $(resolve_link "$link") in
      "$package/"*)
        echo_if_verbose "Unlinking $link"
        rm -f "$link"
        ;;
    esac
  done
}

git_check_up_to_date() {
  cd "$1"
  git remote update > /dev/null 2>&1
  if git symbolic-ref --short -q HEAD > /dev/null; then
    if [ "$(git rev-list --count "HEAD...HEAD@{upstream}")" -gt 0 ]; then
      return 1
    fi
  fi
}